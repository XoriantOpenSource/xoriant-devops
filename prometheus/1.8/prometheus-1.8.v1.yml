# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['127.0.0.1:9090']
  - job_name: 'node'
    honor_labels: true
    scrape_interval:     15s
    static_configs:
      - targets: ['127.0.0.1:9100', '127.0.0.1:9100','127.0.0.1:9100']
        labels:
         group: 'prod_node'
      - targets: ['127.0.0.1:9100', '127.0.0.1:9100','127.0.0.1:9100']
        labels:
         group: 'dev_node'
  - job_name: 'mysql'
    honor_labels: true
    scrape_interval:     15s
    static_configs:
       - targets: ['127.0.0.1:9104']
         labels:
             DB: 'prod_mysql'
       - targets: ['127.0.0.1:9104']
         labels:
             DB: 'dev_mysql'
  - job_name: 'caching-server'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 30s
    scrape_timeout: 10s
    static_configs:
       - targets: ['127.0.0.1:3903']
         labels:
             CS: 'prod_cs'
       - targets: ['127.0.0.1:9104']
         labels:
             CS: 'dev_cs'
